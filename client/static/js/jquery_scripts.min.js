$(document).ready(function(){
  console.log($(window).width())
  console.log("Screen Width:"+$(window).outerWidth());
  console.log("Viewport Width:"+$(window).innerWidth());
  //toggles the building contact form
  $(".need-building").click(function(){
    $(".building-form").slideToggle("slow");
  })

  $(".hamburger-icon").click(function(){
    $(".hamburger-list").slideToggle("slow")
  })

  //The code is for anchor tags that are linked to another part of the page. It first stops it from going straight there with "$('html, body').stop()", then it animates the scrolling, or shows it with ".animate({options}, speed)".
  //The scrollTop() method when used without a parameter returns the current vertical position of the scroll bar, basically the number of pixels that are hidden from the top of the screen to the top of the page. When used with a parameter, scrollTop sets the current vertical position to the one given. So, if we did scrollTop(300), it would set the top of the screen 300 pixels below the top of the page. Basically, with "$.attr(this,"href")", it first grabs the attribute of the href, which would could be "#projects", then it becomes equal to, in this case, whatever has an id of projects or "$(#projects)". So, "{scrollTop:$($.attr(this,"href")).offset().top}", finds the element or id you're trying to go to with your anchor tag, then gets the exact number of pixels it is from the top of the page, via ".offset().top".
  //Through this, if we clicked the "Projects" navbar link, it would find the pixels that the project_list is from the top and scroll to that spot via scrollTop. 750 is just the speed that the animation occurs at, lower numbers are faster.
  $("a").click(function(){
    //we use both "html" and "body" for scrollTop code since some browsers apply the "overall" scroll to the <html> element, and some apply it to the <body> element. For compatibility, we apply the scrolling to both.
    $("html, body").stop().animate(
      {scrollTop: $( $.attr(this,"href") ).offset().top},
      750
    );
    var e=$(this).attr("href");
    //the below line checks if we clicked the "contact" navbar link, via e.indexOf(). It just checks if "#contact" is contained within "e" which would make it evaluate to 0 if true. The "$("#name").focus()", makes it focus on anything with an id of "name", which is an input in this case.
    if (e.indexOf("#contact") == 0) {
      $("#name").focus()
    }
    //this last line is important, this makes it so that when we click on the navbar links, the url doesn't change, even though normally it would go from "/" to "/#contact". You have to return ! with a number that isn't 0, doesn't matter if it's negative or posivit, as long as it isn't zero, returning !-7 works as well. Basically, returning "!1" is equal to returning false, it is used to prevent the default functionality, which in this case is go to the next url or "/#contact".
    return !1
  })



  //the rest of the jquery below controls the nav-bar, when it gets fixed to the top of the page, and which link has the "active" class attached to it.
  var e=$("#hamburger"),
  t=$("#dropdown");
  e.click(function(){t.slideToggle("fast")}),
  t.find("a").on("click",function(){$(t).slideToggle()}),
  hero=$(".title-row"),
  header=$(".header-container"),
  clients=$("#clients"),
  projects=$("#projects"),
  projectsOffset=projects.offset(),
  contactOffset=$("#contact").offset(),
  mapCanvasOffset=$("#map").offset(),


  $(window).scroll(function(){
    //basically an if statment, this refers to the window (or computer screen), once you scroll past the "projectsOffset" or how far the project section is from the top of the page, it triggers. Basically, once the top of the screen passes from the home section to the project section, this activates
    $(this).scrollTop()>projectsOffset.top?

    ($(this).scrollTop()<mapCanvasOffset.top-200&&
      (header.find(".active").removeClass("active"), //start of the && parenthesis
      header.find(".project_nav").addClass("active")), // end of the && parenthesis
      //This is the line that changes the header from having the default class (relatve position) to the nav-fixed class (fixed position css wise)
      header.hasClass("default")&&header.hide().removeClass("default").addClass('nav-fixed').fadeIn("slow"))

    //the below lines change it from the project or contact nav bar link being active to the home link being active
    :(header.removeClass("nav-fixed").addClass("default"),
    header.find(".active").removeClass("active"),
    header.find(".home_nav").addClass("active")),


    $(this).scrollTop()>mapCanvasOffset.top&&(
      header.find(".active").removeClass("active"),
      header.find(".contact_nav").addClass("active")
    )
  }) //end of scroll function








//END
})
